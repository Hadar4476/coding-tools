Rules in Regex and How To?
__________________________

1. Regular expressions always start and end with / (/ <word, character, letter, number, etc.> /).

2. If I write only a word, letter, character or number within the regular expression (/ /),
regex will perform a simple search on the data, without a template,
that is, it will find the data simply as its meaning.

regular expression: /hadar/

string:             hadar yamin
                    _____
        
3. Regex is case sensetive(big and small letters).

        
        
        
Modes,What does that mean?
_________________________

1) GLOBAL MODE:

For example, suppose I have searched for a word that appears several times,
by default in javascript as long as I do not specify "status" at the end of
the regular expression, it will always search and bring only the first instance
in which the word appears. Therefore this mode needs to be changed to a global mode.
how? In this way: / blablabla / g.
It is very important to note that the syntax of using situations is done by writing them out of expression.

without global mode:
___________________

regular expression: /hadar/

string:             hadar yamin hadar yamin
                    _____
        
        
with global mode:
________________

regular expression: /hadar/g

string:             hadar yamin hadar yamin
                    _____       _____
            
       
       
       
2) INSENSETIVE MODE:

this mode is for making the regular  expression not case sensetive(insensetive).

without insensetive mode:
________________________

regular expression: /hadar/

string:             HADAR yamin 



with insensetive mode:
_____________________


regular expression: /hadar/i

string:             HADAR yamin 
                    _____
        

3) MULTILINE MODE:

Supports situations that the data we want to look for is not just in one row (line down)
but in another, below it. 
* Not so important in javascript according to Shlomi.

usage in regular expression:
___________________________

regular expression: /hadar/m




- SIGNS - 

1) the dot sign( . ): there are two usages for this sign:
                    - finding the actual sign ".", how?
                    
                    regular expression:  /\./
                    
                    string:              hadar yamin.
                                                    _
                       
                    - finding all characters, digits & signs individually(means all), how?
                    
                     regular expression:  /./
                    
                    string:              hadar yamin.
                                         ____________
                                         
                                  

2) create a set( [] ). lets say I would like to find the letters "h" and "Y":
                     I can use a set to tell regex, I want you to find this by a set 
                     of these, how?
                        
                     regular expression:  /[hY]/
                    
                     string:              hadar Yamin.
                                         _
                             
                     *important thing to note here*
                     since I havn't used global mode(g), regex found the first case
                     it encountered.
                     
                     to fix it I can type like this:
                     
                     regular expression:  /[hY]/g
                    
                     string:              hadar Yamin.
                                          _     _
                                          
 
3) set a range( [-] ). lets say I want to check only for digits between 0-9 in my string.
                       I can combine set and range. how? like this:
                       
                        regular expression:  /[0-9]/g
                    
                        string:              0505640800 8699377
                                             __________ _______
                          
                        
                        *important thing to note here*
                        regex found each digit individually in this case.
                        the range dosen't have to be from 0-9, A-Z or a-z
                        it can be, for example:
                        [2-6], [4-5],[3-9]
                        [b-f],[h-o],[a-w]
                        [C-E],[T-S],[K-R]
                        
                        as long as the order of the range is logicly possible
                        regex will find the contant.
                        
                        types of sets:
                        
                        /[0-9]/ - for digits between 0 to 9.
                        /[A-Z]/ - for big letters only between A to Z.
                        /[a-z]/ - for small letters only between a to z.
                        
                        an alternatives for not using /[A-Za-z]/ : 
                        
                        - /[0-9A-Z]/gi 
                        - /[0-9A-z]/g


4)find except( ^ ). this sign is called chaos and is used for finding 
                    notes except specific notes. how? like this:
                    
                    regular expression: /[^0-9]/gm
                    
                    string            : hadar yamin 1234567
                                        ____________
                              
                    also, the except sign determinante how to string should
                    start, for example:
                    
                    regular expression: /^[^Y]+/gm
                    string            : Hadar Yossi
                                        _____
                  

5) an alternative for [0-9] ( \d ). a shortcut for digit,
                                    usage:
                                    
                                    regular expression: /\d/
                                    
                                    string            : hadar yamin 123456
                                                                    ______
                                                                    
                                    except( ^ ) in \d : \D
                                    
                                    regular expression: /\D/
                                    
                                    string            : hadar Yamin 123456 @#$%^&*
                                                        ____________      ________
                                    
                                    
 6) how to check for space( " " )? there are three ways to check if there is a space 
                                   in a string:
                                   
                                   - simply clicking the spacebar:
                                   
                                   regular expression: / /g
                                   
                                   string            : hadar yamin hi
                                                            _     _
                                                            
                                   - putting a space in range:
                                   
                                   regular expression: /[ ]/g
                                   
                                   string            : hadar yamin hi
                                                            _     _
                                   
                                   the third way is using \s.how? like this:
                                   
                                   regular expression: /\s/g
                                   
                                   string            : hadar yamin hi
                                                            _     _
                                                            
                                   
7) combination of diffrent ranges: lets say that I want to find if the string
                                   contains small & big letters, digits from 0 to 9
                                   and also bottom line ( _ ). there are to ways to do
                                   that. how? like this:
                                   
                                   first option: /[A-Za-z0-9_]/gm
                                   
                                   second option:
                                   using the \w sign which means it will find A to Z, a to z
                                   0 to 9 and bottom line ( _ ) but ONLY bottom line, not other
                                   special signs. 
                                   
                                   usage: /\w/gm
                                   
                                   except( ^ ) in \w : \W
                                   
8) it may appear - condition( ? ): this sign is used for telling regex: "this note may apear before
                                   what I want you to find". for example, lets say I want to find
                                   the combination of "hi", but some string contains that "hi" and
                                   there may be a letter before that "hi".
                                   
                                   regular expression: /[A-z]?hi/gm
                                   
                                   string            : hi
                                                       __
                                                       bhi
                                                       ___
                                                       
                                                       ccccc
                                                       
                                                       ccChi
                                                         ___
                                                         
                                                       ddDhi
                                                         ___
                                                         
                                                       dhi
                                                       ___
                                                       
                                                       ddddddd
                                                       
                                                       
                                   *important thing to note here:
                                   when I'm making a usage of "?" he will check only one note
                                   that comes before what I want regex to find.
                                   
                                   a solution would be using the duplicate sign( * ), right before 
                                   the ? sign(after the optional note). means "I know that this is optional
                                   but choose all the string anyways".
                                   
                                   *another important thing to note here that if there is a digit or other sign
                                   before what we want to find like "9hi" regex won't consider it with * because it
                                   dosen't meet our condition.
                                   
                                   usage:
                                   
                                   regular expression: /[A-z]*?hi/gm
                                   
                                   string            : hi
                                                       __
                                                       bhi
                                                       ___
                                                       
                                                       ccccc
                                                       
                                                       ccChi
                                                       _____
                                                         
                                                       ddDhi
                                                       _____
                                                         
                                                       dhi
                                                       ___
                                                       
                                                       ddddddd
                                                       
                                   
                                                                                                         
                  
9) the individuality problem ( + ): as I mentioned if I don't use some special sign like
                                    *, regex will find each note individualiy and not the whole
                                    string. for fixing this I need to use the plus( + ) sign.
                                    the plus sign is very useful with sets and its role is: "choose
                                    every note in that string as one word/string".
                                    
                                    usage: /[a-z]+/g
                                    
                                    
                                    
10) limit number of notes with curly brackets ( {} ): with curly brackets I can set a limit to
                                                      how many notes I want regex to find:
                                                      
                                                      regular expression: /\d{3}/gm
                                                      
                                                      string            : 123
                                                                          ___
                                                                          
                                                                          4444
                                                                          ___
                                                                          
                                                                          555555
                                                                          ______
                                                                          
                                                                          666666666
                                                                          _________
                                                                          
                                                                          77776
                                                                          ___
                                                                          
                                                                          3311133
                                                                          ______
                                                                          
                                                                          
                                                      *important thing to note here:
                                                      the searching dosen't stop at some point. means that if
                                                      that regex won't find only strings that contain 3 notes ONLY.
                                                      if other strings contain 3 notes it will find them and take them,
                                                      even if that string has 3 notes twice (6) notes, as long as the
                                                      number of notes is divisible with 3 it will take it(BUT ONLY THE PART
                                                      OF THE DIVISIBLE). its like regex is starting a new string.
                                                      
                                                      
                                                      there is also an option to set a min and max of range with {}:
                                                      
                                                      regular expression: /\d{2,4}/gm
                                                      
                                                      string            : 1
                                                      
                                                                          4444
                                                                          ____
                                                                          
                                                                          555556
                                                                          ______
                                                                          
                                                                          666666666
                                                                          ________
                                                                          
                                                                          7777
                                                                          ____
                                                                          
                                                                          3311133
                                                                          _______
                                                                          
                                                        
                                                        in this case I've set a min of 2 notes and max of 4.
                  
                  

11) how it should end? ( $ ): the dollar sign ( $ ) determinante how the string should end.
                              examples:
                              
                              - 1 -
                              
                              regular expression: /\.(png|jpg|gif|jpeg)$/gm
                              
                              string            :
                                                  image.png.pdf
                                                  
                                                  image.jpg
                                                       ____
                                                       
                                                  demo.gif
                                                      ____
                                                      
                                                  demo.jpeg.text
                                                  
                             - 2 -
                             
                             regular expression: /.+?r$/gm
                             
                             string            : hadar
                                                 _____
                                                 
                                                 amir
                                                 ____
                                                 
                                                 ron
                                                 
                              - 3 -
                              finding only numbers:
                              
                              regular expression : /^\d+$/gm
                              
                              string             : 0386ffff999
                                                   
                                                   8699377
                                                   _______
                                                   
                                                   0505640800
                                                   __________
                                                   
                                                   1234567
                                                   _______
                                                   
                                                   111yytgfd1
                                                  
                                              
                              

13)groups & or ( () | ). lets say I want to tell regex to find me a
                         string that matches an item from a group of items:
                         
                         regular expression: /(hadar|amir|yossi|vidran)/gm
                         
                         string            : hadar yamin
                                             _____
                                             
                                             amir yamin
                                             ____
                                             
                                             yossi shaish
                                             _____
                                             
                                             vidran abramovich
                                             ______
                                             
                          *important thing to note here:
                          by default regex will store this group () inside of a var
                          so if I want to use it again, in php for example I can call that
                          var whenever and reuse it. the problem is that now this group is 
                          saved on the internal memory of the machine, something that can 
                          cause a bed performence.
                          I can slove it like this:
                          
                          regular expression: /(?:hadar|amir|yossi|vidran)/gm
                          
                          
                         
14) look ahead assertions( LAAS ): there are two kinds of LAAS, positive and negative
                           these LAAS are for telling regex, before you are checking something
                           check if this exists in the string.
                           
                           - Positive - 
                           for the positive LAA, I'm checking if the wanted note does exists
                           in my string and if it does find it and return it.
                           
                           example:
                           I want to check if there is a big letter in the string, if there
                           is find it and return it to me.
                           
                           regular expression: /^(?=.*[A-Z])\w+$/gm
                           
                           string            : dummy
                                               
                                               teXt
                                               ____
                                               
                                               hellO
                                               _____
                                               
                                               Hi
                                               __
                                               
                                               hello_world
                                               
                              
                            
                            
                           - Negative - 
                           for the negative LAA, I'm checking if the wanted note does exists
                           in my string and if it does find it and DO NOT return it.
                           
                           example:
                           I want to check if there is a big letter in the string, if there
                           is find it and DO NOT return it to me.
                           
                           regular expression: /^(?!.*[A-Z])\w+$/gm
                           
                           string            : dummy
                                               _____
                                               
                                               teXt
                                               
                                               hellO
                                               
                                               Hi
                                               
                                               hello_world
                                               ___________
                                               
                                               
                                               
                                               
                                                
                        
Examples for Regex:
__________________

1. lets say I want to find s specific string with regex, something like "!05Ads"

conditions:
__________

- the first note dosen't have to be a specific type(digit,letter,sign etc), it can be everything.
- the second note must be 0.
- the third note must be a digit between 0 to 9.
- the fourth note must be a big letter only, from A to Z.
- the fifth note must be a small letter only, from a to z.
- the last note can be whatever.

solution:
________

regular expression:   /.0[0-9][A-Z][a-z]./gm

2) lets say I'm building a system for a government organization and I need the user
to enter his full name.

conditions:
__________

- the first letter must be a big letter in english or any letter in hebrew.
- all notes must be characters.
- the string can't contain a space(  ) before the first name and after the last name only in-between.
- the string can't contain dots( . ) or commas( , ).
- it must have it least 2 notes with a limit of 30 notes.
- it must end with a character.

solution:
________

regular expression:  /^(?!.*\s\s)(?!.*\.\.)(?!.*,,)[א-תA-Z][א-תA-z .,]{2,30}$/gm

                        
                                     
                       

        





